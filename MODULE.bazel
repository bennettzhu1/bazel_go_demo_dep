module(
    name = "bazel_go_demo_dep",
    repo_name = "com_github_bennettzhu1_bazel_go_demo_dep",
)

bazel_dep(name = "rules_go", version = "0.51.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.40.0", repo_name = "bazel_gazelle")
bazel_dep(name = "rules_oci", version = "2.0.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "platforms", version = "0.0.8")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

GO_VERSION = "1.23.1"

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = GO_VERSION)

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_work = "//:go.work")

# go_deps.from_file(go_mod = "//:go.mod")
go_deps.gazelle_default_attributes(
    build_file_generation = "on",
    directives = [
        "gazelle:proto disable",
    ],
)

oci.pull(
    name = "ubuntu_noble",  # aka 24
    digest = "sha256:f18e19d1329c0df38dd5f6bfd931c7764fa1e3acf6b3280da62015a338805ce8",
    image = "index.docker.io/bazelbuild/buildfarm-worker-base",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
    tag = "noble",
)
use_repo(oci, "ubuntu_noble", "ubuntu_noble_linux_amd64", "ubuntu_noble_linux_arm64")

# go_deps.module(
#     path = "github.com/google/uuid",
#     sum = "h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=",
#     version = "v1.3.0",
# )
use_repo(go_deps, "com_github_bennettzhu1_multi_module_demo_lib", "com_github_google_uuid", "com_github_pkg_errors")
